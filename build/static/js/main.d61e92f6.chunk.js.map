{"version":3,"sources":["Axios.js","Requests.js","Banner.js","Nav.js","Row.js","screens/HomeScreen.js","firebase.js","screens/SignUpScreen.js","screens/LoginScreen.js","features/userSlice.js","screens/ProfileScreen.js","App.js","app/store.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Nav","show","handleshow","history","useHistory","transitionNavBar","window","scrollY","addEventListener","removeEventListener","onClick","push","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","fecthData","map","poster_path","HomeScreen","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","SignUpScreen","emailRef","useRef","passwordRef","ref","type","placeholder","e","preventDefault","signInWithEmailAndPassword","current","value","then","authUser","catch","error","alert","message","createUserWithEmailAndPassword","LoginScreen","signin","setSignIn","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","ProfileScreen","useSelector","email","signOut","App","dispatch","useDispatch","onAuthStateChanged","userAuth","uid","path","exact","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.d61e92f6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","const API_KEY = \"69056cfd4c68450db9dd685bce56ecd2\";\r\n\r\nconst requests = {\r\n\r\nfetchTrending:`/trending/all/week?api_key = ${API_KEY}&language=en-US`,\r\n\r\nfetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n\r\nfetchTopRated:`/movie/top_rated?api_key = ${API_KEY}&language=en-US`,\r\n\r\nfetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n\r\nfetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`, \r\n\r\nfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n\r\nfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`, \r\n\r\nfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;","import React, { useEffect, useState } from \"react\";\r\nimport \"./Banner.css\";\r\nimport axios from \"./Axios\";\r\nimport requests from \"./Requests\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(movie);\r\n\r\n  function truncation(string, n) {\r\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">My List</button>\r\n          <button className=\"banner__button\">Play</button>\r\n        </div>\r\n        <div className=\"banner__description\">\r\n          {truncation(movie?.overview, 150)}\r\n        </div>\r\n      </div>\r\n      <div className=\"banner--fadeBttom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleshow] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const transitionNavBar = () => {\r\n    if (window.scrollY > 100) {\r\n      handleshow(true);\r\n    } else {\r\n      handleshow(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transitionNavBar);\r\n    return () => window.removeEventListener(\"scroll\", transitionNavBar);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <div className=\"nav__contents\">\r\n        <img\r\n          onClick={() => history.push(\"/\")}\r\n          className=\"nav_logo\"\r\n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n          alt=\"\"\r\n        />\r\n\r\n        <img\r\n          onClick={() => history.push(\"/profile\")}\r\n          className=\"nav_avatar\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Row.css\";\r\nimport axios from \"./Axios\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\n  useEffect(() => {\r\n    async function fecthData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fecthData();\r\n  }, [fetchUrl]);\r\n\r\n  console.log(movies);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            className={`row__poster ${isLargeRow && \"row__posterLaarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport Banner from \"../Banner\";\r\nimport \"./HomeScreen.css\";\r\nimport Nav from \"../Nav.js\";\r\nimport requests from \"../Requests\";\r\nimport Row from \"../Row\";\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <div className=\"homeScreen\">\r\n      {/* Navbar */}\r\n\r\n      <Nav />\r\n\r\n      {/* Banner */}\r\n      <Banner />\r\n\r\n      {/* Row */}\r\n      <Row\r\n        title=\"NETFLIX ORIGINALS\"\r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow\r\n      />\r\n      {/* <Row title=\"Trending Now\" fetchUrl = {requests.fetchTrending}/> */}\r\n      {/* <Row title=\"Top Rated\" fetchUrl = {requests.fetchTopRated}/> */}\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n      <Row title=\"Romance Now\" fetchUrl={requests.fetchRomanceMovies} />\r\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAzJIYt1UyJV46nSG8MlTO_KtxRhuKQ3p8\",\r\n    authDomain: \"netflix-app-156027.firebaseapp.com\",\r\n    projectId: \"netflix-app-156027\",\r\n    storageBucket: \"netflix-app-156027.appspot.com\",\r\n    messagingSenderId: \"902644664920\",\r\n    appId: \"1:902644664920:web:a10e7121f97cbb5f01582d\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n\r\n  const auth = firebase.auth();\r\n\r\n  export { auth };\r\n  export default db;","import React, { useRef } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport \"./SignupScreen.css\";\r\n\r\nfunction SignUpScreen() {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"signupScreen\">\r\n      <form>\r\n        <h1>Sign In</h1>\r\n        <input ref={emailRef} type=\"Email\" placeholder=\"Email\" />\r\n        <input ref={passwordRef} type=\"Password\" placeholder=\"Password\" />\r\n        <button type=\"submit\" onClick={signIn}>\r\n          Sign In\r\n        </button>\r\n        <h4>\r\n          <span className=\"signupScreen__grey\">New to netflix ? </span>\r\n          <span className=\"signupScreen_link\" onClick={register}>\r\n            Sign Up now\r\n          </span>\r\n        </h4>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpScreen;\r\n","import React, { useState } from 'react'\r\nimport './LoginScreen.css' \r\nimport SignUpScreen from './SignUpScreen';\r\nfunction LoginScreen() {\r\n    const [signin, setSignIn] = useState(false);\r\n\r\n    return (\r\n        <div className=\"loginScreen\">\r\n            <div className=\"loginScreen__background\">\r\n                <img className=\r\n                \"loginScreen__logo\" src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"\"/>\r\n\r\n                <button\r\n                onClick={()=> setSignIn(true)}\r\n                 className=\"loginScreen_button\">Sign In</button>\r\n\r\n                    <div className=\"loginScreen__gradient\"/>\r\n\r\n                    <div className=\"loginScreen__body\">\r\n                        {signin ? (\r\n                            <SignUpScreen/>\r\n                        ):(\r\n                            <>\r\n                            <h1>Unlimited films, TV programms and more.</h1>\r\n                            <h2>Watch anywhere. Cancel at any time.</h2>\r\n                            <h3>Ready to watch? Enter your email or restart your membership.</h3>\r\n                            <div className=\"loginScreen__input\">\r\n                                 <form>\r\n                                     <input type=\"email\" placeholder =\"Email Address\"/>\r\n                                     <button \r\n                                     onClick={()=> setSignIn(true)}\r\n                                     className=\"loginScreen__getSrarted\">GET STARTED</button>\r\n                                 </form>\r\n                            </div>\r\n                        </>\r\n                        )}\r\n                        \r\n                    </div>\r\n                    \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login:(state, action) =>{\r\n      state.user = action.payload;\r\n    },\r\n    logout:(state) =>{\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout} = userSlice.actions;\r\n\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n ","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { auth } from \"../firebase\";\r\nimport Nav from \"../Nav\";\r\nimport \"./ProfileScreen.css\";\r\n\r\nfunction ProfileScreen() {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <div className=\"profileScreen \">\r\n      <Nav />\r\n      <div className=\"profileScreen__body\">\r\n        <h1>Edit Profile</h1>\r\n        <div className=\"profileScreen__info\">\r\n          <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"profileScreen__details\">\r\n            <h2>{user.email}</h2>\r\n            <div className=\"profileScreen__plans\">\r\n              <h3>Plans</h3>\r\n              <button\r\n                onClick={() => auth.signOut()}\r\n                className=\"profileScreen__signOut\"\r\n              >\r\n                Sign Out\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { auth } from \"./firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, logout, selectUser } from \"./features/userSlice\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        //logged in\r\n        console.log(userAuth);\r\n        dispatch(\r\n          login({\r\n            uid: userAuth.uid,\r\n            email: userAuth.email,\r\n          })\r\n        );\r\n      } else {\r\n        //Logged Out\r\n        dispatch(logout());\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <LoginScreen />\r\n        ) : (\r\n          <Switch>\r\n            <Route path=\"/profile\">\r\n              <ProfileScreen />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <HomeScreen />\r\n            </Route>\r\n          </Switch>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}